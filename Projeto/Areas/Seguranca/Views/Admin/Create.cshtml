@model Projeto.Areas.Seguranca.Models.UsuarioViewModel

@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    ViewBag.Title = "Registro de um NOVO USUARIO";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Usuários <small>   Registro</small>
            </h1>
        </div>
    </div>
    <div class="panel panel-primary">
        <div class="panel-body">
            <div class="form-horizontal">
                @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Count() > 0))
                {
                    <div class="alert alert-danger alert-dismissable">
                        @Html.ValidationSummary(false, "Verifique os seguintes erros:")
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email , new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Senha , new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer panel-info">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar alterações" class="btn btn-danger" />
                @Html.ActionLink("Retornar para a listagem de USUÁRIOS", "Index", null, new { @class = "btn btn-warning" })
            </div>
            <br />
            <br />
        </div>
    </div>
}

@section ScriptPage{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript">
            $(document).ready(function () {
                $('li').removeClass("active");
                $('#liUsuarios').addClass("active");
            });
    </script>
}
